{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\engm8\\\\OneDrive\\\\Desktop\\\\coding\\\\top-sellers\\\\src\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport styles from './Dashboard.module.css';\nimport { LoadingIcon } from './Icons'; // import { getOrders } from './dataService';\n\nimport useOrders from './hooks/useOrders';\nimport { useState } from 'react'; // Overview:\n// You are provided with an incomplete <Dashboard /> component.\n// Demo video - You can view how the completed functionality should look at: https://drive.google.com/file/d/1lH8ojlvb62I_9z3jGxhNEY_-8S4trNo7/view?usp=sharing \n// This demo video uses the same dataset, so your total and ranking calculations should match it\n// You are not allowed to add any additional HTML elements.\n// You are not allowed to use refs.\n// Requirements:\n// Once the <Dashboard /> component is mounted, load the order data using the getOrders function imported above\n// Once all the data is successfully loaded, hide the loading icon\n// Calculate and display the total revenue\n// Display a ranking showing the sellers ordered by their total revenue using the <SellerRanking /> component. \n// The seller with the highest revenue should be shown at the top with position 1. \n// All the revenue values should only consider Confirmed orders. Canceled orders should be ignored.\n// All dollar amounts should be displayed to 2 decimal places\n// The getOrders function times out frequently. Display any errors returned while loading the data in the provided div. \n// The retry button should clear the error and reattempt the request\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SellerRanking = ({\n  position,\n  sellerName,\n  sellerRevenue\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: position\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: sellerName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [\"$\", sellerRevenue]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SellerRanking;\n\nconst Dashboard = () => {\n  _s();\n\n  const [orders, setOrders] = useOrders();\n  const [error, setError] = useState(null);\n  typeof orders === 'string' ? setError(true) : setError(false);\n  console.log(orders);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: styles.header,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Top Sellers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(LoadingIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.errorContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.errorMessage,\n          children: orders\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Retry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.summary,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Total revenue: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"totalRevenue\",\n            children: \"$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Seller Rankings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: styles.table,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Position\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Seller Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Seller Revenue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"zhE4wf50Vfj5UC+BU/15zDbs41s=\", false, function () {\n  return [useOrders];\n});\n\n_c2 = Dashboard;\nexport default Dashboard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SellerRanking\");\n$RefreshReg$(_c2, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/engm8/OneDrive/Desktop/coding/top-sellers/src/Dashboard.js"],"names":["styles","LoadingIcon","useOrders","useState","SellerRanking","position","sellerName","sellerRevenue","Dashboard","orders","setOrders","error","setError","console","log","header","errorContainer","errorMessage","summary","table"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,SAASC,WAAT,QAA4B,SAA5B,C,CACA;;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAGA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,UAAZ;AAAwBC,EAAAA;AAAxB,CAAD,KAA6C;AACjE,sBACE;AAAA,4BACE;AAAA,gBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,sBAAMC,aAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CARD;;KAAMH,a;;AAUN,MAAMI,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,SAAS,EAArC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,SAAOM,MAAP,KAAkB,QAAlB,GAA4BG,QAAQ,CAAC,IAAD,CAApC,GAA6CA,QAAQ,CAAC,KAAD,CAArD;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACA,sBACE;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAET,MAAM,CAACe,MAA1B;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADF,EAGGJ,KAAK,iBAAI;AAAK,QAAA,SAAS,EAAEX,MAAM,CAACgB,cAAvB;AAAA,gCACR;AAAK,UAAA,SAAS,EAAEhB,MAAM,CAACiB,YAAvB;AAAA,oBAAsCR;AAAtC;AAAA;AAAA;AAAA;AAAA,gBADQ,eAER;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFQ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHZ,eAOE;AAAA,+BACE;AAAG,UAAA,SAAS,EAAET,MAAM,CAACkB,OAArB;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,YAAA,EAAE,EAAC,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,eAcE;AAAO,QAAA,SAAS,EAAElB,MAAM,CAACmB,KAAzB;AAAA,gCACE;AAAA,iCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CAxCD;;GAAMX,S;UACwBN,S;;;MADxBM,S;AA0CN,eAAeA,SAAf","sourcesContent":["import styles from './Dashboard.module.css';\nimport { LoadingIcon } from './Icons';\n// import { getOrders } from './dataService';\nimport useOrders from './hooks/useOrders'\nimport { useState } from 'react';\n\n// Overview:\n// You are provided with an incomplete <Dashboard /> component.\n// Demo video - You can view how the completed functionality should look at: https://drive.google.com/file/d/1lH8ojlvb62I_9z3jGxhNEY_-8S4trNo7/view?usp=sharing \n// This demo video uses the same dataset, so your total and ranking calculations should match it\n// You are not allowed to add any additional HTML elements.\n// You are not allowed to use refs.\n\n// Requirements:\n// Once the <Dashboard /> component is mounted, load the order data using the getOrders function imported above\n// Once all the data is successfully loaded, hide the loading icon\n// Calculate and display the total revenue\n// Display a ranking showing the sellers ordered by their total revenue using the <SellerRanking /> component. \n// The seller with the highest revenue should be shown at the top with position 1. \n// All the revenue values should only consider Confirmed orders. Canceled orders should be ignored.\n// All dollar amounts should be displayed to 2 decimal places\n// The getOrders function times out frequently. Display any errors returned while loading the data in the provided div. \n// The retry button should clear the error and reattempt the request\n\n\nconst SellerRanking = ({ position, sellerName, sellerRevenue }) => {\n  return (\n    <tr>\n      <td>{position}</td>\n      <td>{sellerName}</td>\n      <td>${sellerRevenue}</td>\n    </tr>    \n  );\n}\n\nconst Dashboard = () => {\n  const [orders, setOrders] = useOrders()\n  const [error, setError] = useState(null)\n  typeof orders === 'string'? setError(true) : setError(false)\n\n  console.log(orders)\n  return (\n    <div>\n      <header className={styles.header}>        \n        <h1>Top Sellers</h1>        \n      </header>\n      <main>\n        <LoadingIcon />    \n        {/* Place any data fetching errors inside this div, only render the div if there are errors */}\n        {error && <div className={styles.errorContainer}>\n          <div className={styles.errorMessage}>{orders}</div>\n          <button>Retry</button>\n        </div>}\n        <div>\n          <p className={styles.summary}>\n            <strong>Total revenue: </strong> \n            <span id=\"totalRevenue\">${/* Total revenue should be rendered here */}</span>\n            </p>       \n        </div>\n        <h2>Seller Rankings</h2>\n        <table className={styles.table}>\n          <thead>\n            <tr>\n              <th>Position</th>\n              <th>Seller Name</th>\n              <th>Seller Revenue</th>\n            </tr>\n          </thead>\n          <tbody>\n          {/* Seller Rankings should be rendered here */}\n          </tbody>\n        </table>\n      </main>\n    </div>\n  );\n};\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}